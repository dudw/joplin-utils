import{aE as k,r as t,as as h,z as a}from"./index.efb12cde.js";import{j as i,n as x,B as s}from"./joplinApiGenerator.9092228f.js";import{C as f}from"./index.1eb4b65f.js";import{L as l}from"./index.5cb1bda4.js";import{T as u}from"./index.faf5f02f.js";import"./TextArea.1da65b23.js";class y{async check(){const r=new Set(k(await i.folderApi.listAll(),{id:"id",path:"path",children:"children"}).map(o=>o.id));return(await x.pageToAllList(i.noteApi.list.bind(i.noteApi),{fields:["id","title","parent_id"],order_by:"user_updated_time",order_dir:"DESC"})).filter(o=>!r.has(o.parent_id))}}const C=new y,_=()=>{const[n,r]=t.exports.useState([]),[c,o]=h(async()=>{const e=await C.check();console.log("list: ",e),r(e)});async function p(e){await i.noteApi.remove(e),r(m=>m.filter(d=>d.id!==e))}return t.exports.createElement(f,{title:a.t("checkParentNotebook.title"),extra:t.exports.createElement(s,{loading:c.loading,onClick:o},a.t("common.action.check"))},t.exports.createElement(l,{dataSource:n,locale:{emptyText:a.t("checkParentNotebook.listEmptyText")},renderItem:e=>t.exports.createElement(l.Item,{id:e.id,extra:t.exports.createElement(s,{onClick:()=>p(e.id)},a.t("common.action.remove"))},t.exports.createElement(u.Text,null,e.title))}))};export{_ as default};
